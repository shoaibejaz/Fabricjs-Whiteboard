{"version":3,"sources":["lib/components/WhiteBoard/index.module.scss","lib/components/WhiteBoard/index.jsx","lib/components/WhiteBoard/images/remove.svg","lib/components/WhiteBoard/cursors.js","App.js","index.js"],"names":["module","exports","origX","origY","getCursor","type","removeCursor","drawInstance","mouseDown","options","currentMode","currentColor","currentWidth","fill","group","modes","RECTANGLE","TRIANGLE","ELLIPSE","LINE","PENCIL","ERASER","removeObject","canvas","e","remove","target","stopDrawing","removeCanvasListener","off","createLine","on","pointer","getPointer","fabric","Line","x","y","strokeWidth","stroke","selectable","add","requestRenderAll","startAddLine","set","x2","y2","setCoords","startDrawingLine","selection","hoverCursor","isDrawingMode","getObjects","map","item","discardActiveObject","createRect","Rect","left","top","width","height","console","log","startAddRect","Math","abs","renderAll","startDrawingRect","createEllipse","Ellipse","cornerSize","objectCaching","startAddEllipse","rx","ry","startDrawingEllipse","createTriangle","Triangle","startAddTriangle","startDrawingTriangle","Whiteboard","useState","toggle","setToggle","setCanvas","file","totalPages","currentPageNumber","currentPage","fileReaderInfo","setFileReaderInfo","canvasRef","useRef","colorPelateRef","uploadImageRef","uploadPdfRef","useEffect","Canvas","Object","prototype","transparentCorners","cornerStyle","borderColor","cornerColor","padding","borderDashArray","path","initCanvas","center","getCenter","Image","fromURL","img","scaleToHeight","setBackgroundImage","bind","originX","originY","className","styles","container","closeContainer","Tooltip","title","placement","button","closeButton","onClick","icon","openContainer","openButton","onSelectMode","freeDrawingBrush","parseInt","draw","current","click","ref","style","border","backgroundColor","borderRadius","name","id","onChange","value","color","uploadDropdown","dropdownContent","text","Textbox","editable","createText","changeToErasingMode","forEach","backgroundImage","clearCanvas","accept","reader","FileReader","files","addEventListener","result","readAsDataURL","event","data","whiteboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a08479c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WhiteBoard_container__Gk5fp\",\"closeContainer\":\"WhiteBoard_closeContainer__2Ye5O\",\"openContainer\":\"WhiteBoard_openContainer__3y3Pt\",\"button\":\"WhiteBoard_button__2u4Gq\",\"closeButton\":\"WhiteBoard_closeButton__1Kq91\",\"openButton\":\"WhiteBoard_openButton__1-qfC\",\"icon\":\"WhiteBoard_icon__zblv7\",\"count\":\"WhiteBoard_count__2hlAz\",\"whiteboard\":\"WhiteBoard_whiteboard__3N3eD\",\"toolbar\":\"WhiteBoard_toolbar__3LdIK\",\"whiteboardButton\":\"WhiteBoard_whiteboardButton__YFvyM\",\"dropdownButton\":\"WhiteBoard_dropdownButton__2iDdm\",\"uploadDropdown\":\"WhiteBoard_uploadDropdown__1oRID\",\"dropdownContent\":\"WhiteBoard_dropdownContent__F5gOg\"};","import React, { useState, useRef, useEffect } from 'react';\r\n//          Importing CSS Files\r\nimport styles from './index.module.scss';\r\n//          Importing Icons\r\nimport { \r\n  HiChevronDoubleRight, HiChevronDoubleLeft, GiArrowCursor, MdModeEditOutline, FaShapes, MdClear, SiWritedotas, FaEraser, IoDocument \r\n} from \"react-icons/all\";\r\n//          Importing Components\r\nimport { fabric } from 'fabric';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport PdfReader from '../PdfReader';\r\nimport { saveAs } from 'file-saver';\r\nimport getCursor from './cursors';\r\n\r\nimport './eraserBrush';\r\n\r\n\r\nlet drawInstance = null;\r\nlet origX;\r\nlet origY;\r\nlet mouseDown = false;\r\n\r\nconst options = {\r\n  currentMode: '',\r\n  currentColor: '#000000',\r\n  currentWidth: 5,\r\n  fill: false,\r\n  group: {},\r\n};\r\n\r\nconst modes = {\r\n  RECTANGLE: 'RECTANGLE',\r\n  TRIANGLE: 'TRIANGLE',\r\n  ELLIPSE: 'ELLIPSE',\r\n  LINE: 'LINE',\r\n  PENCIL: 'PENCIL',\r\n  ERASER: 'ERASER',\r\n};\r\n\r\nconst initCanvas = () => {\r\n  const canvas = new fabric.Canvas('canvas', { height: 700, width: 900 });\r\n  fabric.Object.prototype.transparentCorners = false;\r\n  fabric.Object.prototype.cornerStyle = 'circle';\r\n  fabric.Object.prototype.borderColor = '#4447A9';\r\n  fabric.Object.prototype.cornerColor = '#4447A9';\r\n  fabric.Object.prototype.cornerSize = 6;\r\n  fabric.Object.prototype.padding = 10;\r\n  fabric.Object.prototype.borderDashArray = [ 5, 5 ];\r\n\r\n  canvas.on('object:added', (e) => {\r\n    e.target.on('mousedown', removeObject(canvas));\r\n  });\r\n  canvas.on('path:created', (e) => {\r\n    e.path.on('mousedown', removeObject(canvas));\r\n  });\r\n\r\n  return canvas;\r\n};\r\n\r\nfunction removeObject(canvas) {\r\n  return (e) => {\r\n    if (options.currentMode === modes.ERASER) {\r\n      canvas.remove(e.target);\r\n    }\r\n  };\r\n}\r\n\r\nfunction stopDrawing() {\r\n  mouseDown = false;\r\n}\r\n\r\nfunction removeCanvasListener(canvas) {\r\n  canvas.off('mouse:down');\r\n  canvas.off('mouse:move');\r\n  canvas.off('mouse:up');\r\n}\r\n\r\n/*  ==== line  ==== */\r\nfunction createLine(canvas) {\r\n  if (modes.currentMode !== modes.LINE) {\r\n    options.currentMode = modes.LINE;\r\n\r\n    removeCanvasListener(canvas);\r\n    canvas.on('mouse:down', startAddLine(canvas));\r\n    canvas.on('mouse:move', startDrawingLine(canvas));\r\n    canvas.on('mouse:up', stopDrawing);\r\n\r\n    canvas.selection = false;\r\n    canvas.hoverCursor = 'auto';\r\n    canvas.isDrawingMode = false;\r\n    canvas.getObjects().map((item) => item.set({ selectable: false }));\r\n    canvas.discardActiveObject().requestRenderAll();\r\n  }\r\n}\r\n\r\nfunction startAddLine(canvas) {\r\n  return ({ e }) => {\r\n    mouseDown = true;\r\n\r\n    let pointer = canvas.getPointer(e);\r\n    drawInstance = new fabric.Line([pointer.x, pointer.y, pointer.x, pointer.y], {\r\n      strokeWidth: options.currentWidth,\r\n      stroke: options.currentColor,\r\n      selectable: false,\r\n    });\r\n\r\n    canvas.add(drawInstance);\r\n    canvas.requestRenderAll();\r\n  };\r\n}\r\n\r\nfunction startDrawingLine(canvas) {\r\n  return ({ e }) => {\r\n    if (mouseDown) {\r\n      const pointer = canvas.getPointer(e);\r\n      drawInstance.set({\r\n        x2: pointer.x,\r\n        y2: pointer.y,\r\n      });\r\n      drawInstance.setCoords();\r\n      canvas.requestRenderAll();\r\n    }\r\n  };\r\n}\r\n\r\n/* ==== rectangle ==== */\r\nfunction createRect(canvas) {\r\n  if (options.currentMode !== modes.RECTANGLE) {\r\n    options.currentMode = modes.RECTANGLE;\r\n\r\n    removeCanvasListener(canvas);\r\n\r\n    canvas.on('mouse:down', startAddRect(canvas));\r\n    canvas.on('mouse:move', startDrawingRect(canvas));\r\n    canvas.on('mouse:up', stopDrawing);\r\n\r\n    canvas.selection = false;\r\n    canvas.hoverCursor = 'auto';\r\n    canvas.isDrawingMode = false;\r\n    canvas.getObjects().map((item) => item.set({ selectable: false }));\r\n    canvas.discardActiveObject().requestRenderAll();\r\n  }\r\n}\r\n\r\nfunction startAddRect(canvas) {\r\n  return ({ e }) => {\r\n    mouseDown = true;\r\n\r\n    const pointer = canvas.getPointer(e);\r\n    origX = pointer.x;\r\n    origY = pointer.y;\r\n\r\n    drawInstance = new fabric.Rect({\r\n      stroke: options.currentColor,\r\n      strokeWidth: options.currentWidth,\r\n      fill: options.fill ? options.currentColor : 'transparent',\r\n      left: origX,\r\n      top: origY,\r\n      width: 0,\r\n      height: 0,\r\n      selectable: false,\r\n    });\r\n\r\n    canvas.add(drawInstance);\r\n\r\n    drawInstance.on('mousedown', (e) => {\r\n      if (options.currentMode === modes.ERASER) {\r\n        console.log('刪除', e);\r\n        canvas.remove(e.target);\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nfunction startDrawingRect(canvas) {\r\n  return ({ e }) => {\r\n    if (mouseDown) {\r\n      const pointer = canvas.getPointer(e);\r\n\r\n      if (pointer.x < origX) {\r\n        drawInstance.set('left', pointer.x);\r\n      }\r\n      if (pointer.y < origY) {\r\n        drawInstance.set('top', pointer.y);\r\n      }\r\n      drawInstance.set({\r\n        width: Math.abs(pointer.x - origX),\r\n        height: Math.abs(pointer.y - origY),\r\n      });\r\n      drawInstance.setCoords();\r\n      canvas.renderAll();\r\n    }\r\n  };\r\n}\r\n\r\n/* ==== Ellipse ==== */\r\nfunction createEllipse(canvas) {\r\n  if (options.currentMode !== modes.ELLIPSE) {\r\n    options.currentMode = modes.ELLIPSE;\r\n\r\n    removeCanvasListener(canvas);\r\n\r\n    canvas.on('mouse:down', startAddEllipse(canvas));\r\n    canvas.on('mouse:move', startDrawingEllipse(canvas));\r\n    canvas.on('mouse:up', stopDrawing);\r\n\r\n    canvas.selection = false;\r\n    canvas.hoverCursor = 'auto';\r\n    canvas.isDrawingMode = false;\r\n    canvas.getObjects().map((item) => item.set({ selectable: false }));\r\n    canvas.discardActiveObject().requestRenderAll();\r\n  }\r\n}\r\n\r\nfunction startAddEllipse(canvas) {\r\n  return ({ e }) => {\r\n    mouseDown = true;\r\n\r\n    const pointer = canvas.getPointer(e);\r\n    origX = pointer.x;\r\n    origY = pointer.y;\r\n    drawInstance = new fabric.Ellipse({\r\n      stroke: options.currentColor,\r\n      strokeWidth: options.currentWidth,\r\n      fill: options.fill ? options.currentColor : 'transparent',\r\n      left: origX,\r\n      top: origY,\r\n      cornerSize: 7,\r\n      objectCaching: false,\r\n      selectable: false,\r\n    });\r\n\r\n    canvas.add(drawInstance);\r\n  };\r\n}\r\n\r\nfunction startDrawingEllipse(canvas) {\r\n  return ({ e }) => {\r\n    if (mouseDown) {\r\n      const pointer = canvas.getPointer(e);\r\n      if (pointer.x < origX) {\r\n        drawInstance.set('left', pointer.x);\r\n      }\r\n      if (pointer.y < origY) {\r\n        drawInstance.set('top', pointer.y);\r\n      }\r\n      drawInstance.set({\r\n        rx: Math.abs(pointer.x - origX) / 2,\r\n        ry: Math.abs(pointer.y - origY) / 2,\r\n      });\r\n      drawInstance.setCoords();\r\n      canvas.renderAll();\r\n    }\r\n  };\r\n}\r\n\r\n/* === triangle === */\r\nfunction createTriangle(canvas) {\r\n  removeCanvasListener(canvas);\r\n\r\n  canvas.on('mouse:down', startAddTriangle(canvas));\r\n  canvas.on('mouse:move', startDrawingTriangle(canvas));\r\n  canvas.on('mouse:up', stopDrawing);\r\n\r\n  canvas.selection = false;\r\n  canvas.hoverCursor = 'auto';\r\n  canvas.isDrawingMode = false;\r\n  canvas.getObjects().map((item) => item.set({ selectable: false }));\r\n  canvas.discardActiveObject().requestRenderAll();\r\n}\r\n\r\nfunction startAddTriangle(canvas) {\r\n  return ({ e }) => {\r\n    mouseDown = true;\r\n    options.currentMode = modes.TRIANGLE;\r\n\r\n    const pointer = canvas.getPointer(e);\r\n    origX = pointer.x;\r\n    origY = pointer.y;\r\n    drawInstance = new fabric.Triangle({\r\n      stroke: options.currentColor,\r\n      strokeWidth: options.currentWidth,\r\n      fill: options.fill ? options.currentColor : 'transparent',\r\n      left: origX,\r\n      top: origY,\r\n      width: 0,\r\n      height: 0,\r\n      selectable: false,\r\n    });\r\n\r\n    canvas.add(drawInstance);\r\n  };\r\n}\r\n\r\nfunction startDrawingTriangle(canvas) {\r\n  return ({ e }) => {\r\n    if (mouseDown) {\r\n      const pointer = canvas.getPointer(e);\r\n      if (pointer.x < origX) {\r\n        drawInstance.set('left', pointer.x);\r\n      }\r\n      if (pointer.y < origY) {\r\n        drawInstance.set('top', pointer.y);\r\n      }\r\n      drawInstance.set({\r\n        width: Math.abs(pointer.x - origX),\r\n        height: Math.abs(pointer.y - origY),\r\n      });\r\n\r\n      drawInstance.setCoords();\r\n      canvas.renderAll();\r\n    }\r\n  };\r\n}\r\n\r\nfunction createText(canvas) {\r\n  removeCanvasListener(canvas);\r\n\r\n  canvas.isDrawingMode = false;\r\n\r\n  const text = new fabric.Textbox('text', {\r\n    left: 100,\r\n    top: 100,\r\n    fill: options.currentColor,\r\n    editable: true,\r\n  });\r\n\r\n  canvas.add(text);\r\n  canvas.renderAll();\r\n}\r\n\r\nfunction changeToErasingMode(canvas) {\r\n  if (options.currentMode !== modes.ERASER) {\r\n    removeCanvasListener(canvas);\r\n\r\n    canvas.isDrawingMode = false;\r\n\r\n    options.currentMode = modes.ERASER;\r\n    canvas.hoverCursor = `url(${getCursor({ type: 'eraser' })}), default`;\r\n  }\r\n}\r\n\r\nfunction onSelectMode(canvas) {\r\n  options.currentMode = '';\r\n  canvas.isDrawingMode = false;\r\n\r\n  removeCanvasListener(canvas);\r\n\r\n  canvas.getObjects().map((item) => item.set({ selectable: true }));\r\n  canvas.hoverCursor = 'all-scroll';\r\n}\r\n\r\nfunction clearCanvas(canvas) {\r\n  canvas.getObjects().forEach((item) => {\r\n    if (item !== canvas.backgroundImage) {\r\n      canvas.remove(item);\r\n    }\r\n  });\r\n}\r\nfunction canvasToJson(canvas) {\r\n  alert(JSON.stringify(canvas.toJSON()));\r\n}\r\n\r\nfunction draw(canvas) {\r\n  if (options.currentMode !== modes.PENCIL) {\r\n    removeCanvasListener(canvas);\r\n\r\n    options.currentMode = modes.PENCIL;\r\n    // canvas.freeDrawingBrush = new fabric.PencilBrush(canvas);\r\n    canvas.freeDrawingBrush.width = parseInt(options.currentWidth, 10) || 1;\r\n    canvas.isDrawingMode = true;\r\n  }\r\n}\r\n\r\nexport const Whiteboard = () => {\r\n  const [ toggle, setToggle ] = useState( false );\r\n  const [canvas, setCanvas] = useState(null);\r\n  const [brushWidth, setBrushWidth] = useState(5);\r\n  const [isFill, setIsFill] = useState(false);\r\n  const [fileReaderInfo, setFileReaderInfo] = useState({\r\n    file: '',\r\n    totalPages: null,\r\n    currentPageNumber: 1,\r\n    currentPage: '',\r\n  });\r\n  const canvasRef = useRef(null);\r\n  const colorPelateRef = useRef(null);\r\n  const uploadImageRef = useRef(null);\r\n  const uploadPdfRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!canvas) {\r\n      setCanvas(() => initCanvas());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (canvas) {\r\n      const center = canvas.getCenter();\r\n      fabric.Image.fromURL(fileReaderInfo.currentPage, (img) => {\r\n        img.scaleToHeight(canvas.height);\r\n        canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas), {\r\n          top: center.top,\r\n          left: center.left,\r\n          originX: 'center',\r\n          originY: 'center',\r\n        });\r\n\r\n        canvas.renderAll();\r\n      });\r\n    }\r\n  }, [fileReaderInfo.currentPage]);\r\n\r\n  function uploadImage(e) {\r\n    const reader = new FileReader();\r\n    const file = e.target.files[0];\r\n\r\n    reader.addEventListener('load', () => {\r\n      fabric.Image.fromURL(reader.result, (img) => {\r\n        img.scaleToHeight(canvas.height);\r\n        canvas.add(img);\r\n      });\r\n    });\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  function changeCurrentWidth(e) {\r\n    const intValue = parseInt(e.target.value);\r\n    options.currentWidth = intValue;\r\n    canvas.freeDrawingBrush.width = intValue;\r\n    setBrushWidth(() => intValue);\r\n  }\r\n\r\n  function changeCurrentColor(e) {\r\n    options.currentColor = e.target.value;\r\n    canvas.freeDrawingBrush.color = e.target.value;\r\n  }\r\n\r\n  function changeFill(e) {\r\n    options.fill = e.target.checked;\r\n    setIsFill(() => e.target.checked);\r\n  }\r\n\r\n  function onSaveCanvasAsImage() {\r\n    canvasRef.current.toBlob(function (blob) {\r\n      saveAs(blob, 'image.png');\r\n    });\r\n  }\r\n\r\n  function onFileChange(event) {\r\n    updateFileReaderInfo({ file: event.target.files[0], currentPageNumber: 1 });\r\n  }\r\n\r\n  function updateFileReaderInfo(data) {\r\n    setFileReaderInfo({ ...fileReaderInfo, ...data });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={ styles.container }>\r\n        { toggle === false ?\r\n          <div className={ styles.closeContainer }>\r\n            <Tooltip title='Open Menu' placement='bottom'>\r\n              <button className={ `${ styles.button } ${ styles.closeButton }` } onClick={ () => { setToggle( true ) } }>\r\n                <HiChevronDoubleRight className={ styles.icon } />\r\n              </button>\r\n            </Tooltip>\r\n          </div> : \r\n          <div className={ styles.openContainer }>\r\n            <Tooltip title='Close Menu' placement='right'>\r\n              <button className={ `${ styles.button } ${ styles.openButton }` } onClick={ () => { setToggle( false ) } }>\r\n                <HiChevronDoubleLeft className={ styles.icon } />\r\n              </button>\r\n            </Tooltip>\r\n            <Tooltip title='Cursor' placement='right'>\r\n              <button className={ styles.button } onClick={ () => onSelectMode( canvas ) }>\r\n                <GiArrowCursor className={ styles.icon } />\r\n              </button>\r\n            </Tooltip>\r\n            <Tooltip title='Pencil' placement='right'>\r\n              <button className={ styles.button } onClick={ () => draw( canvas ) }>\r\n                <MdModeEditOutline className={ styles.icon } />\r\n              </button>\r\n            </Tooltip>\r\n            <Tooltip title='Pencil Color' placement='right'>\r\n              <button className={ styles.button } onClick={ () => colorPelateRef.current.click() }>\r\n                <input ref={ colorPelateRef } style={ { width: '25px', height: '25px', border: 'none', backgroundColor: 'transparent', borderRadius: '12px' } } type=\"color\" name=\"color\" id=\"color\" onChange={ changeCurrentColor } />\r\n              </button>\r\n            </Tooltip>\r\n            <Tooltip title='Shapes' placement='bottom'>\r\n              <div className={ styles.uploadDropdown }>\r\n                <button className={ styles.button }>\r\n                  <FaShapes className={ styles.icon } />\r\n                </button>\r\n                <div className={ styles.dropdownContent }>\r\n                  <span onClick={ () => createLine( canvas ) }>Line</span>\r\n                  <span onClick={ () => createRect( canvas ) }>Rectangle</span>\r\n                  <span onClick={ () => createEllipse( canvas ) }>Ellipse</span>\r\n                  <span onClick={ () => createTriangle( canvas ) }>Triangle</span>\r\n                </div>\r\n              </div>\r\n            </Tooltip>\r\n            <Tooltip title='Write' placement='right'>\r\n              <button className={ styles.button } onClick={ () => createText( canvas ) }>\r\n                <SiWritedotas className={ styles.icon } />\r\n              </button>\r\n            </Tooltip>\r\n            <Tooltip title='Erase' placement='bottom'>\r\n              <div className={ styles.uploadDropdown }>\r\n                <button className={ styles.button }>\r\n                  <FaEraser className={ styles.icon } />\r\n                </button>\r\n                <div className={ styles.dropdownContent }>\r\n                  <span onClick={ () => changeToErasingMode( canvas ) }>Erase</span>\r\n                  <span onClick={ () => clearCanvas( canvas ) }>Clear All</span>\r\n                </div>\r\n              </div>\r\n            </Tooltip>\r\n            <Tooltip title='Document' placement='bottom'>\r\n              <div className={ styles.uploadDropdown }>\r\n                <input ref={ uploadImageRef } accept=\"image/*\" type=\"file\" onChange={ uploadImage } />\r\n                <input ref={ uploadPdfRef } accept=\".pdf\" type=\"file\" onChange={ onFileChange } />\r\n                <button className={ styles.button } onClick={ () => uploadImageRef.current.click() }>\r\n                  <IoDocument className={ styles.icon } />\r\n                </button>\r\n                {/* <div className={ styles.dropdownContent }>\r\n                  <span onClick={ () => uploadImageRef.current.click() }>Image</span>\r\n                  <span onClick={ () => uploadPdfRef.current.click() }>PDF</span>\r\n                </div> */}\r\n              </div>\r\n            </Tooltip>\r\n          </div> }\r\n      </div>\r\n      <div className={ styles.whiteboard }>\r\n        <canvas ref={ canvasRef } id=\"canvas\" />\r\n        {/* <div>\r\n          <PdfReader fileReaderInfo={ fileReaderInfo } updateFileReaderInfo={ updateFileReaderInfo } />\r\n        </div> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/remove.e47a6de3.svg\";","import removeCursor from './images/remove.svg';\r\n\r\nconst getCursor = ( { type } ) => {\r\n  switch ( type ) {\r\n    case 'eraser': {\r\n      return removeCursor;\r\n    }\r\n\r\n    default: {\r\n      return '';\r\n    }\r\n  }\r\n};\r\n\r\nexport default getCursor;\r\n","import React from 'react';\r\nimport { Whiteboard } from './lib/components/WhiteBoard';\r\n\r\nconst App = () => {\r\n  return <Whiteboard />;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}